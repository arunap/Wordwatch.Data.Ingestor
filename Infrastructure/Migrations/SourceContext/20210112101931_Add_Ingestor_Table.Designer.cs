// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wordwatch.Data.Ingestor.Infrastructure;

namespace Wordwatch.Data.Ingestor.Infrastructure.Migrations.SourceContext
{
    [DbContext(typeof(SourceDbContext))]
    [Migration("20210112101931_Add_Ingestor_Table")]
    partial class Add_Ingestor_Table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ww")
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wordwatch.Data.Ingestor.Domain.Entities.IngestorInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataIngestStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("SyncedToElastic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("call_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("call_type")
                        .HasColumnType("smallint");

                    b.Property<string>("channel_key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("start_datetime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("stop_datetime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("id");

                    b.ToTable("IngestorInfo","dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
